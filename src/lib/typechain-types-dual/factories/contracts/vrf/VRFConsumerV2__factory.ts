/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VRFConsumerV2,
  VRFConsumerV2Interface,
} from "../../../contracts/vrf/VRFConsumerV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numerators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "s_numWords",
        type: "uint32",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610180346100f3576001600160401b03601f61070a38819003918201601f1916840191838311858410176100f8578085926060946040528339810103126100f357815190811681036100f3576020820151916001600160a01b038316908184036100f357604001519260805261010092620f424084526101209260038452610140916103e8835261016093612710855260a05260e0523360018060a01b0319600254161760025560c052604051926105fb948561010f8639608051856103d1015260a051856102a5015260c0518561020d015260e051856101df0152518461025e0152518361023701525182505051815050f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081631fe543e31461032557508063e726f2e114610172578063e89e106a14610131578063f6eaffc8146100c85763f86eb11f1461005a57600080fd5b346100c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c457356003548110156100c4576003602093527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01549051908152f35b8280fd5b50346100c45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c4573582548110156100c45782602093527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301549051908152f35b50503461016e57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016e576020906001549051908152f35b5080fd5b5091903461016e57602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c457803563ffffffff808216809203610321578351927f5d3b1d300000000000000000000000000000000000000000000000000000000084527f00000000000000000000000000000000000000000000000000000000000000009084015267ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016602484015261ffff7f00000000000000000000000000000000000000000000000000000000000000001660448401527f00000000000000000000000000000000000000000000000000000000000000001660648301526084820152838160a4818673ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af19283156103165780936102e1575b50508160015551908152f35b909192508382813d831161030f575b6102fa818361057e565b8101031261030c5750519038806102d5565b80fd5b503d6102f0565b8251903d90823e3d90fd5b8480fd5b9190503461057a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261057a57602480359267ffffffffffffffff8085116105765736602386011215610576578484013592818411610505578360051b956020946103968689018661057e565b8452848401828198830101913683116105725783879101915b838310610562575050505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001680330361052f5750825191821161050557680100000000000000008211610505575086548188558082106104c5575b5084939293878052875b82811061049357505050845194808601923586528386015251809152606084019291855b82811061047f57867f68f6adf8851f96fb54bce56dbb5ff1bc6b368aeaf5d3d1aedc38fb1548d3546787870388a180f35b83518552938101939281019260010161044e565b81517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5638201559085019060010161042a565b817f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56391820191015b8181106104fa5750610420565b8881556001016104ed565b876041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b87517f1cf993f4000000000000000000000000000000000000000000000000000000008152338188015291820152604490fd5b82358152918101918791016103af565b8a80fd5b8680fd5b8380fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176105bf57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea164736f6c6343000811000a";

type VRFConsumerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFConsumerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFConsumerV2__factory extends ContractFactory {
  constructor(...args: VRFConsumerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VRFConsumerV2> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    ) as Promise<VRFConsumerV2>;
  }
  override getDeployTransaction(
    subscriptionId: PromiseOrValue<BigNumberish>,
    vrfCoordinator: PromiseOrValue<string>,
    keyHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      keyHash,
      overrides || {}
    );
  }
  override attach(address: string): VRFConsumerV2 {
    return super.attach(address) as VRFConsumerV2;
  }
  override connect(signer: Signer): VRFConsumerV2__factory {
    return super.connect(signer) as VRFConsumerV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFConsumerV2Interface {
    return new utils.Interface(_abi) as VRFConsumerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFConsumerV2 {
    return new Contract(address, _abi, signerOrProvider) as VRFConsumerV2;
  }
}

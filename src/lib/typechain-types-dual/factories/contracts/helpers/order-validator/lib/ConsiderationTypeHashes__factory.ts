/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ConsiderationTypeHashes,
  ConsiderationTypeHashesInterface,
} from "../../../../../contracts/helpers/order-validator/lib/ConsiderationTypeHashes";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x610160604090808252346104bb5760208161001b6007936104c0565b828152016614d9585c1bdc9d60ca1b81522060805260036020825161003f816104c0565b828152016218971960e91b81522060a05280519060208201906909ecccccae492e8cada560b31b82526e1d5a5b9d0e081a5d195b551e5c194b608a1b9283602a8201526d1859191c995cdcc81d1bdad95b8b60921b8060398301527f75696e74323536206964656e7469666965724f7243726974657269612c0000008060478401527f75696e74323536207374617274416d6f756e742c00000000000000000000000094856064850152701d5a5b9d0c8d4d88195b99105b5bdd5b9d607a1b6078850152602960f81b95866089860152606a855260a085019260018060401b0394868510868611176104a55784885260c087019971086dedce6d2c8cae4c2e8d2dedc92e8cada560731b8b5260d288015260e187015260ef86015261010c85015261012095711d5a5b9d0c8d4d88195b99105b5bdd5b9d0b60721b87860152701859191c995cdcc81c9958da5c1a595b9d607a1b61013286015280610143860152608483526101ad836104db565b85516f09ee4c8cae486dedae0dedccadce8e6560831b60208201526f1859191c995cdcc81bd999995c995c8b60821b60308201526c1859191c995cdcc81e9bdb994b609a1b878201527113d999995c925d195b56d7481bd999995c8b60721b604d8201527f436f6e73696465726174696f6e4974656d5b5d20636f6e73696465726174696f605f820152611b8b60f21b607f8201526f1d5a5b9d0e081bdc99195c951e5c194b60821b6081820152711d5a5b9d0c8d4d881cdd185c9d151a5b594b60721b60918201526f1d5a5b9d0c8d4d88195b99151a5b594b60821b60a382015270189e5d195ccccc881e9bdb9952185cda0b607a1b60b38201526c1d5a5b9d0c8d4d881cd85b1d0b609a1b60c48201527f6279746573333220636f6e647569744b65792c0000000000000000000000000060d18201526e3ab4b73a191a9b1031b7bab73a32b960891b60e48201528160f382015260d481526101009889820193828510878611176104a55784895287519020908551902090898301936c08a92a06e626488dedac2d2dc5609b1b85526b1cdd1c9a5b99c81b985b594b60a21b61012d8501526e1cdd1c9a5b99c81d995c9cda5bdb8b608a1b6101398501526f1d5a5b9d0c8d4d8818da185a5b92590b60821b6101488501527f6164647265737320766572696679696e67436f6e747261637400000000000000610158850152610171840152605285526101809384840195808710898811176104a557868b5251902060c05260e0528952806103f86101a0976103f2898401976103f289866104f6565b906104f6565b61019f1991900390810184526101601901601f191601908101938411828510176104a5576d06c7676171937c444f6bde3d62829261022092858852519020875260c0519460805160a0519183019687526101c08301526101e082015246610200820152015260a0815261046a816104db565b51902090610140918252519160119384610522853960805184505060a05184505060c05184505060e051845050518350505182505051815050f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b038211176104a557604052565b60c081019081106001600160401b038211176104a557604052565b9081519160005b83811061050e575050016000815290565b80602080928401015181850152016104fd56fe600080fdfea164736f6c6343000811000a";

type ConsiderationTypeHashesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConsiderationTypeHashesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConsiderationTypeHashes__factory extends ContractFactory {
  constructor(...args: ConsiderationTypeHashesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConsiderationTypeHashes> {
    return super.deploy(overrides || {}) as Promise<ConsiderationTypeHashes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConsiderationTypeHashes {
    return super.attach(address) as ConsiderationTypeHashes;
  }
  override connect(signer: Signer): ConsiderationTypeHashes__factory {
    return super.connect(signer) as ConsiderationTypeHashes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConsiderationTypeHashesInterface {
    return new utils.Interface(_abi) as ConsiderationTypeHashesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConsiderationTypeHashes {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConsiderationTypeHashes;
  }
}

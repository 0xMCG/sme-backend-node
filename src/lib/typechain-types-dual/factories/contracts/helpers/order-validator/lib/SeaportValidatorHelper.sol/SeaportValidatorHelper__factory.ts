/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  SeaportValidatorHelper,
  SeaportValidatorHelperInterface,
} from "../../../../../../contracts/helpers/order-validator/lib/SeaportValidatorHelper.sol/SeaportValidatorHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC1155_INTERFACE_ID",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC20_INTERFACE_ID",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721_INTERFACE_ID",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "interfaceHash",
        type: "bytes4",
      },
    ],
    name: "checkInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorFeeEngine",
    outputs: [
      {
        internalType: "contract CreatorFeeEngineInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionAmountStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "transactionAmountEnd",
        type: "uint256",
      },
    ],
    name: "getCreatorFeeInfo",
    outputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "creatorFeeAmountStart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creatorFeeAmountEnd",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "includedTokens",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "targetIndex",
        type: "uint256",
      },
    ],
    name: "getMerkleProof",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "includedTokens",
        type: "uint256[]",
      },
    ],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ItemType",
        name: "itemType",
        type: "uint8",
      },
    ],
    name: "isPaymentToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "includedTokens",
        type: "uint256[]",
      },
    ],
    name: "sortMerkleTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "sortedTokens",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "orderParameters",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "considerationItemIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seaportAddress",
        type: "address",
      },
    ],
    name: "validateConsiderationItem",
    outputs: [
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "orderParameters",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "considerationItemIndex",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seaportAddress",
        type: "address",
      },
    ],
    name: "validateConsiderationItemParameters",
    outputs: [
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "orderParameters",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "seaportAddress",
        type: "address",
      },
    ],
    name: "validateConsiderationItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "offerer",
            type: "address",
          },
          {
            internalType: "address",
            name: "zone",
            type: "address",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
            ],
            internalType: "struct OfferItem[]",
            name: "offer",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "enum ItemType",
                name: "itemType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "identifierOrCriteria",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "startAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endAmount",
                type: "uint256",
              },
              {
                internalType: "address payable",
                name: "recipient",
                type: "address",
              },
            ],
            internalType: "struct ConsiderationItem[]",
            name: "consideration",
            type: "tuple[]",
          },
          {
            internalType: "enum OrderType",
            name: "orderType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "zoneHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "conduitKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "totalOriginalConsiderationItems",
            type: "uint256",
          },
        ],
        internalType: "struct OrderParameters",
        name: "orderParameters",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "primaryFeeRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "primaryFeeBips",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "checkCreatorFee",
        type: "bool",
      },
    ],
    name: "validateStrictLogic",
    outputs: [
      {
        components: [
          {
            internalType: "uint16[]",
            name: "errors",
            type: "uint16[]",
          },
          {
            internalType: "uint16[]",
            name: "warnings",
            type: "uint16[]",
          },
        ],
        internalType: "struct ErrorsAndWarnings",
        name: "errorsAndWarnings",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "valueToProve",
        type: "uint256",
      },
    ],
    name: "verifyMerkleProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a080604052346200015157600060014614801562000145575b156200005f5750730385603ab55642cb4dd5de3ae9e306809991804f5b6001600160a01b0316608052613bd69081620001578239608051818181610d5801526131890152f35b4660030362000084575073ff5a6f7f36764aad301b7c9e85a5277614df5e2662000036565b46600403620000a95750738d17687ea9a6bb6efa24ec11dcfab01661b2ddcd62000036565b46600503620000ce575073e7c9cb6d966f76f3b5142167088927bf34966a1f62000036565b46602a03620000f357507354d88324cbedffe1e62c9a59ebb310a11c29519862000036565b466089036200011857507328edfcf0be7e86b07493466e7631a213bde8eef262000036565b4662013881036200013f5750730a01e11887f727d1b1cd81251eeee9bee4262d0762000036565b62000036565b50617a69461462000019565b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c80630234cb0b1461013f57806310941e951461013657806326affb001461012d578063272b2ec1146101245780632ca069a51461011b5780632f5d94d7146101125780634710042e1461010957806350b613bf1461010057806359f4a907146100f757806361af055d146100ee5780636bb89fc3146100e557806383f4127a146100dc578063b0517ff2146100d3578063de6fe090146100ca5763f11deea6146100c257600080fd5b61000e610d0c565b5061000e610c93565b5061000e610c4c565b5061000e610c0f565b5061000e610ba7565b5061000e610aec565b5061000e610a92565b5061000e610a77565b5061000e6109c4565b5061000e6108d7565b5061000e61079b565b5061000e61076c565b5061000e61038f565b5061000e6101c4565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040517f36372b07000000000000000000000000000000000000000000000000000000008152f35b73ffffffffffffffffffffffffffffffffffffffff81160361000e57565b35906101c282610199565b565b503461000e5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57606061021660043561020581610199565b606435906044359060243590613162565b9073ffffffffffffffffffffffffffffffffffffffff6040519316835260208301526040820152f35b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761028b57604052565b61029361023f565b604052565b60c0810190811067ffffffffffffffff82111761028b57604052565b6040810190811067ffffffffffffffff82111761028b57604052565b6060810190811067ffffffffffffffff82111761028b57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761028b57604052565b60405190610160820182811067ffffffffffffffff82111761028b57604052565b604051906101c2826102b4565b604051906101c2826102d0565b60209067ffffffffffffffff8111610382575b60051b0190565b61038a61023f565b61037b565b503461000e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760243567ffffffffffffffff811161000e573660238201121561000e578060040135906103eb82610368565b906103f960405192836102ec565b82825260209260248484019160051b8301019136831161000e57602401905b8282106104475761044361043160443586600435613b4e565b60405190151581529081906020820190565b0390f35b81358152908401908401610418565b3590600682101561000e57565b81601f8201121561000e5780359061047a82610368565b9260409061048a825195866102ec565b838552602091828601918360a08097028601019481861161000e578401925b8584106104ba575050505050505090565b868483031261000e5784879184516104d18161026f565b6104da87610456565b8152828701356104e981610199565b83820152858701358682015260608088013590820152608080880135908201528152019301926104a9565b81601f8201121561000e5780359061052b82610368565b9260409061053b825195866102ec565b838552602091828601918360c08097028601019481861161000e578401925b85841061056b575050505050505090565b868483031261000e57848791845161058281610298565b61058b87610456565b81528287013561059a81610199565b838201528587013586820152606080880135908201526080808801359082015260a080880135906105ca82610199565b82015281520193019261055a565b3590600582101561000e57565b9190916101608184031261000e576105fb61032d565b92610605826101b7565b8452610613602083016101b7565b602085015267ffffffffffffffff90604083013582811161000e578161063a918501610463565b6040860152606083013591821161000e57610656918301610514565b6060840152610667608082016105d8565b608084015260a081013560a084015260c081013560c084015260e081013560e0840152610100808201359084015261012080820135908401526101408091013590830152565b60607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261000e576004359067ffffffffffffffff821161000e576106f6916004016105e5565b906024359060443561070781610199565b90565b90815180825260208080930193019160005b82811061072a575050505090565b835161ffff168552938101939281019260010161071c565b61070791602061075b835160408452604084019061070a565b92015190602081840391015261070a565b503461000e57610443610787610781366106ad565b91612236565b604051918291602083526020830190610742565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040517fd9b67a26000000000000000000000000000000000000000000000000000000008152f35b81601f8201121561000e5780359161080c83610368565b9261081a60405194856102ec565b808452602092838086019260051b82010192831161000e578301905b828210610844575050505090565b81358152908301908301610836565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261000e576004359067ffffffffffffffff821161000e57610707916004016107f5565b6020908160408183019282815285518094520193019160005b8281106108c3575050505090565b8351855293810193928101926001016108b5565b503461000e576108e636610853565b6108f08151613631565b9060005b8151811015610964578061090b61095f9284610e76565b516109168285610e76565b51604080516020808201938452808252929161093290826102ec565b5190209061093e61034e565b92835282015261094e8286610e76565b526109598185610e76565b50611b4e565b6108f4565b5061097a610972835161217f565b60008461375f565b6109848151610dcc565b9160005b82518110156109b6578061099f6109b19284610e76565b51516109ab8287610e76565b52611b4e565b610988565b60405180610443868261089c565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610a17610a299136906004016107f5565b610a1f610d7c565b5060243590613a58565b604051906040820192604083528051809452606083019360208092019060005b818110610a63578587038487015285806104438988610742565b825187529583019591830191600101610a49565b503461000e57610443610787610a8c366106ad565b9161213a565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760206040517f80ac58cd000000000000000000000000000000000000000000000000000000008152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435610b2881610199565b602435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361000e57602091610b9d91604051917f01ffc9a70000000000000000000000000000000000000000000000000000000085840152602483015260248252610b98826102d0565b613580565b6040519015158152f35b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610787610bfd6104439236906004016105e5565b60243590610c0a82610199565b611c91565b503461000e57610c2f610c2136610853565b610c29610d7c565b506138a7565b906104436040519283928352604060208401526040830190610742565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57600435600681101561000e57610b9d602091613ba2565b503461000e5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e5760043567ffffffffffffffff811161000e57610ce39036906004016105e5565b602435610cef81610199565b606435801515810361000e57610443926107879260443591610edb565b503461000e5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60405190610d89826102b4565b60606020838281520152565b6040516020810181811067ffffffffffffffff821117610dbf575b60405260008152906000368137565b610dc761023f565b610db0565b90610dd682610368565b610de360405191826102ec565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610e118294610368565b0190602036910137565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090805115610e59570190565b610e61610e1b565b0190565b604090805160011015610e59570190565b6020918151811015610e8b575b60051b010190565b610e93610e1b565b610e83565b60061115610ea257565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b5161070781610e98565b919392610ee6610d7c565b50610eef610d95565b94610ef8610d95565b610f0061034e565b96875260208701528560016040860180518281511480159061103c575b15610faf5750505060005b15610f9b575091610f70610f7692610f7f9594610f62610f4661035b565b73ffffffffffffffffffffffffffffffffffffffff9095168552565b602084015215156040830152565b82612865565b85939193611049565b81610f88575050565b6101c291610f9591612e3e565b83611049565b94955050505050610fab81611071565b5090565b610fc4610fbe610fc992610e4b565b51610ed1565b613ba2565b80611023575b15610fdd5750506000610f28565b610ff0610fc4610fbe610ff49351610e4b565b1590565b80611007575b15610f2857506000610f28565b5061101e610ff0610fc4610fbe60608a0151610e4b565b610ffa565b50611037610fc4610fbe60608a0151610e4b565b610fcf565b5060608801515115610f1d565b602061106d9161105c8151855190611b84565b815201916020835191015190611b84565b9052565b611079610d7c565b5080518051906110946001928381018091116110e457610dcc565b916000815b6110b3575b50506110ad6064915183610e76565b52815290565b82518110156110df578061ffff6110cd6110d99386610e76565b51166109ab8287610e76565b81611099565b61109e565b6110ec611afb565b610dcc565b6110f9610d7c565b5080518051906111146001928381018091116110e457610dcc565b916000815b61112e575b50506110ad6101f4915183610e76565b825181101561114e578061ffff6110cd6111489386610e76565b81611119565b61111e565b61115b610d7c565b5080518051906111766001928381018091116110e457610dcc565b916000815b611190575b50506110ad6101f5915183610e76565b82518110156111b0578061ffff6110cd6111aa9386610e76565b8161117b565b611180565b6111bd610d7c565b506111c88151611c36565b815290565b6111d5610d7c565b5080518051906111f06001928381018091116110e457610dcc565b916000815b61120a575b50506110ad610514915183610e76565b825181101561122a578061ffff6110cd6112249386610e76565b816111f5565b6111fa565b611237610d7c565b5080518051906112526001928381018091116110e457610dcc565b916000815b61126c575b50506110ad610515915183610e76565b825181101561128c578061ffff6110cd6112869386610e76565b81611257565b61125c565b611299610d7c565b5080518051906112b46001928381018091116110e457610dcc565b916000815b6112cd575b50506110ad60c8915183610e76565b82518110156112ed578061ffff6110cd6112e79386610e76565b816112b9565b6112be565b6112fa610d7c565b5080518051906113156001928381018091116110e457610dcc565b916000815b61132e575b50506110ad60c9915183610e76565b825181101561134e578061ffff6110cd6113489386610e76565b8161131a565b61131f565b61135b610d7c565b5080518051906113766001928381018091116110e457610dcc565b916000815b611390575b50506110ad610190915183610e76565b82518110156113b0578061ffff6110cd6113aa9386610e76565b8161137b565b611380565b6113bd610d7c565b5080518051906113d86001928381018091116110e457610dcc565b916000815b6113f2575b50506110ad61012d915183610e76565b8251811015611412578061ffff6110cd61140c9386610e76565b816113dd565b6113e2565b61141f610d7c565b50805180519061143a6001928381018091116110e457610dcc565b916000815b611454575b50506110ad61012c915183610e76565b8251811015611474578061ffff6110cd61146e9386610e76565b8161143f565b611444565b611481610d7c565b50805180519061149c6001928381018091116110e457610dcc565b916000815b6114b6575b50506110ad61012e915183610e76565b82518110156114d6578061ffff6110cd6114d09386610e76565b816114a1565b6114a6565b6114e3610d7c565b5080518051906114fe6001928381018091116110e457610dcc565b916000815b611518575b50506110ad6102bc915183610e76565b8251811015611538578061ffff6110cd6115329386610e76565b81611503565b611508565b611545610d7c565b5080518051906115606001928381018091116110e457610dcc565b916000815b61157a575b50506110ad6102bd915183610e76565b825181101561159a578061ffff6110cd6115949386610e76565b81611565565b61156a565b6115a7610d7c565b5080518051906115c26001928381018091116110e457610dcc565b916000815b6115dc575b50506110ad6102be915183610e76565b82518110156115fc578061ffff6110cd6115f69386610e76565b816115c7565b6115cc565b611609610d7c565b5080518051906116246001928381018091116110e457610dcc565b916000815b61163e575b50506110ad6102bf915183610e76565b825181101561165e578061ffff6110cd6116589386610e76565b81611629565b61162e565b61166b610d7c565b5080518051906116866001928381018091116110e457610dcc565b916000815b6116a0575b50506110ad6102c0915183610e76565b82518110156116c0578061ffff6110cd6116ba9386610e76565b8161168b565b611690565b6116cd610d7c565b5080518051906116e86001928381018091116110e457610dcc565b916000815b611702575b50506110ad6102c1915183610e76565b8251811015611722578061ffff6110cd61171c9386610e76565b816116ed565b6116f2565b61172f610d7c565b50805180519061174a6001928381018091116110e457610dcc565b916000815b611764575b50506110ad6104b0915183610e76565b8251811015611784578061ffff6110cd61177e9386610e76565b8161174f565b611754565b611791610d7c565b5080518051906117ac6001928381018091116110e457610dcc565b916000815b6117c6575b50506110ad6104b1915183610e76565b82518110156117e6578061ffff6110cd6117e09386610e76565b816117b1565b6117b6565b6117f3610d7c565b50805180519061180e6001928381018091116110e457610dcc565b916000815b611828575b50506110ad6104b2915183610e76565b8251811015611848578061ffff6110cd6118429386610e76565b81611813565b611818565b611855610d7c565b5080518051906118706001928381018091116110e457610dcc565b916000815b61188a575b50506110ad6104b3915183610e76565b82518110156118aa578061ffff6110cd6118a49386610e76565b81611875565b61187a565b6118b7610d7c565b5080518051906118d26001928381018091116110e457610dcc565b916000815b6118ec575b50506110ad6104b4915183610e76565b825181101561190c578061ffff6110cd6119069386610e76565b816118d7565b6118dc565b611919610d7c565b5080518051906119346001928381018091116110e457610dcc565b916000815b61194e575b50506110ad6104b5915183610e76565b825181101561196e578061ffff6110cd6119689386610e76565b81611939565b61193e565b61197b610d7c565b5080518051906119966001928381018091116110e457610dcc565b916000815b6119b0575b50506110ad6101f6915183610e76565b82518110156119d0578061ffff6110cd6119ca9386610e76565b8161199b565b6119a0565b6119dd610d7c565b5080518051906119f86001928381018091116110e457610dcc565b916000815b611a12575b50506110ad6101f7915183610e76565b8251811015611a32578061ffff6110cd611a2c9386610e76565b816119fd565b611a02565b611a3f610d7c565b508051805190611a5a6001928381018091116110e457610dcc565b916000815b611a74575b50506110ad6105dc915183610e76565b8251811015611a94578061ffff6110cd611a8e9386610e76565b81611a5f565b611a64565b611aa1610d7c565b508051805190611abc6001928381018091116110e457610dcc565b916000815b611ad6575b50506110ad6105dd915183610e76565b8251811015611af6578061ffff6110cd611af09386610e76565b81611ac1565b611ac6565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9060018201809211611b3957565b6101c2611afb565b91908201809211611b3957565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611b7c570190565b610e61611afb565b805180611b9057505090565b829391935115611c31576110ec611ba991845190611b41565b9060005b8451811015611bef5780611be5611bd2611bca611bea9489610e76565b5161ffff1690565b611bdc8387610e76565b9061ffff169052565b611b4e565b611bad565b509160005b8151811015611c2a5780611be5611c11611bca611c259486610e76565b611bdc611c1f895185611b41565b87610e76565b611bf4565b5090925050565b509050565b805190611c4e6001928381018091116110e457610dcc565b916000815b611c6c575b5050611c686101fc915183610e76565b5290565b8251811015611c8c578061ffff6110cd611c869386610e76565b81611c53565b611c58565b611c99610d7c565b50611ca2610d95565b91611cab610d95565b90611cb461034e565b938452602091828501528392606081019485515115611f00575060009182965b865151881015611ee557611cf2611cec838a8661213a565b87611049565b611cfd888851610e76565b51938015611e85575b611d0f89611b2b565b88518051821015611e715790611d2881611d7093610e76565b518051611d3481610e98565b885190611d4082610e98565b611d4982610e98565b611d5281610e98565b149081611e0e575b81611dfc575b81611d7e575b50611d7557611b4e565b611d0f565b61095989611f82565b905073ffffffffffffffffffffffffffffffffffffffff611df3611dda611dbd60a08095015173ffffffffffffffffffffffffffffffffffffffff1690565b938b015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b91161438611d66565b604080820151908a0151149150611d60565b9050611e308982015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff611e68611dda8c8c015173ffffffffffffffffffffffffffffffffffffffff1690565b91161490611d5a565b5050935096611e7f90611b4e565b96611cd4565b60a085015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff611ed6611dda875173ffffffffffffffffffffffffffffffffffffffff1690565b911603611d0657506001611d06565b955050509193505015611ef457565b611efd82611fe9565b50565b945050505050610fab81611f12610d7c565b5060208101805190815191611f326001938481018091116110e457610dcc565b926000815b611f51575b5050611f4c6101f8915184610e76565b525290565b8251811015611f7d578061ffff611f6b611f779386610e76565b51166109ab8288610e76565b81611f37565b611f3c565b611f8a610d7c565b5060208101805190815191611faa6001938481018091116110e457610dcc565b926000815b611fc4575b5050611f4c6101f9915184610e76565b8251811015611fe4578061ffff611f6b611fde9386610e76565b81611faf565b611fb4565b611ff1610d7c565b50602081018051908151916120116001938481018091116110e457610dcc565b926000815b61202b575b5050611f4c6101fa915184610e76565b825181101561204b578061ffff611f6b6120459386610e76565b81612016565b61201b565b612058610d7c565b50602081016120678151611c36565b905290565b612074610d7c565b50602081018051908151916120946001938481018091116110e457610dcc565b926000815b6120ae575b5050611f4c6101fd915184610e76565b82518110156120ce578061ffff611f6b6120c89386610e76565b81612099565b61209e565b6120db610d7c565b50602081018051908151916120fb6001938481018091116110e457610dcc565b926000815b612115575b5050611f4c6101fb915184610e76565b8251811015612135578061ffff611f6b61212f9386610e76565b81612100565b612105565b9291906121796101c29261214c610d7c565b50612155610d95565b9261215e610d95565b6040519461216b866102b4565b855260208501528396612236565b90611049565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211611b3957565b91908203918211611b3957565b906402540be40091828102928184041490151715611b3957565b9061271091828102928184041490151715611b3957565b81810292918115918404141715611b3957565b8115612207570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92919092612242610d7c565b5061224b610d95565b90612254610d95565b9161225d61034e565b9081526020928382015261227681966060840151610e76565b51936060850191825115806126dc575b6126cb575073ffffffffffffffffffffffffffffffffffffffff6122c160a087015173ffffffffffffffffffffffffffffffffffffffff1690565b16156126bc575b8151608086019384519182811415806126ab575b6125fb575b505050600285516122f181610e98565b6122fa81610e98565b0361241557505160011480159190612408575b506123f9575b80820161233f610ff061233a835173ffffffffffffffffffffffffffffffffffffffff1690565b6134de565b6123ec576123dd926123d8610ff0936123ac60406123927f6352211e00000000000000000000000000000000000000000000000000000000965173ffffffffffffffffffffffffffffffffffffffff1690565b940151604051958693840152602483019190602083019252565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081018452836102ec565b612796565b6123e357565b611efd82611479565b50505090610fab816113b5565b61240284611417565b50612313565b600191505114153861230d565b91505060048392935161242781610e98565b61243081610e98565b0361246a5750015161245b90610ff09073ffffffffffffffffffffffffffffffffffffffff166134de565b61246157565b611efd826113b5565b6003825161247781610e98565b61248081610e98565b1480156125de575b156124c2575001516124b390610ff09073ffffffffffffffffffffffffffffffffffffffff1661347d565b6124b957565b611efd82611353565b90600181516124d081610e98565b6124d981610e98565b0361259357610ff091612570846123ac612537612575978660407fdd62ed3e00000000000000000000000000000000000000000000000000000000980151612584575b015173ffffffffffffffffffffffffffffffffffffffff1690565b6040519283019590955273ffffffffffffffffffffffffffffffffffffffff909316602482018190526044820152929183906064820190565b612754565b61257b57565b611efd826112f2565b61258d8c611291565b5061251c565b90506125ba611dda60409383015173ffffffffffffffffffffffffffffffffffffffff1690565b6125cf575b0151156101c257611efd8261122f565b6125d8846111cd565b506125bf565b50600582516125ec81610e98565b6125f581610e98565b14612488565b66038d7ea4c6800092612652918181111561269d5761264661264c9192945b61264161263b61262a88876121ac565b9260a060c0820151910151906121ac565b916121b9565b6121fd565b916121d3565b906121fd565b6101168111156126865750612666896111b5565b505b1115612677575b3880806122e1565b6126808761206c565b5061266f565b601c10156126685761269789612050565b50612668565b9261264c906126469061261a565b5060c082015160a0830151106122dc565b6126c587611153565b506122c8565b9596505050505050610fab816110f1565b50608086015115612286565b3d1561274f573d9067ffffffffffffffff8211612742575b6040519161273660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846102ec565b82523d6000602084013e565b61274a61023f565b612700565b606090565b60008281939260208394519201905afa61276c6126e8565b9015610fab5780519060208203612791576020918101031261278e5750600190565b80fd5b505090565b60008281939260208394519201905afa906127af6126e8565b91156127de578151602081036127d857826020918101031261278e575060206001910151101590565b50905090565b905090565b6040519060c0820182811067ffffffffffffffff821117612827575b6040528160a06000918281528260208201528260408201528260608201528260808201520152565b61282f61023f565b6127ff565b61283d82610e98565b52565b60ff166001019060ff8211611b3957565b9060ff8091169116019060ff8211611b3957565b919091612870610d7c565b50612879610d95565b92612882610d95565b61288a61034e565b948552602090818601528461289d6127e3565b9160408501946128b3610fc4610fbe8851610e4b565b15612dbc576128ce6128c8610fbe8851610e4b565b85612834565b6129176128fb836128df8951610e4b565b51015173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1685840152565b608061293260606129288951610e4b565b5101519751610e4b565b5101516060820190604061295461294d866128df8651610e4b565b9351610e4b565b510151975b6000988589019361298461297461297c6129748851876121ea565b612710900490565b9651866121ea565b9473ffffffffffffffffffffffffffffffffffffffff95866129ba8d5173ffffffffffffffffffffffffffffffffffffffff1690565b16151580612daa575b612c5f575b5050906129d6939291613162565b959193612a0b60a089019560608a019360808b01998a528452869073ffffffffffffffffffffffffffffffffffffffff169052565b600098612a2f611dda875173ffffffffffffffffffffffffffffffffffffffff1690565b15159081612c51575b5080612c3d575b612a94575b5050505050505050612a7b90612a8192600090600014612a8b5750612a696001612840565b9060009015612a855750600190612851565b60ff1690565b9190565b90612851565b612a6990612840565b90919293949698959786600014612c3257606060ff60025b1692019082612abc83515161217f565b10612c19575090612acd9151610e76565b51976001968951612add81610e98565b825190612ae982610e98565b612af282610e98565b612afb81610e98565b03612bff5789612a7b99612bb395611dda95612b989589612a819f611dda88612b3f60a09a612b5b94015173ffffffffffffffffffffffffffffffffffffffff1690565b94015173ffffffffffffffffffffffffffffffffffffffff1690565b911603612bf0575b6060840151905111612be0575b506080820151905111612bd757015173ffffffffffffffffffffffffffffffffffffffff1690565b935173ffffffffffffffffffffffffffffffffffffffff1690565b911603612bc8575b9281923880888180612a44565b612bd186611911565b50612bbb565b61258d8d6118af565b612be99061184d565b508d612b70565b612bf9826117eb565b50612b63565b505050945050505050612c129150611789565b5060009190565b99505050509350505050612c2d9150611727565b509190565b606060ff6001612aac565b508151151580612a3f575086511515612a3f565b604001511515905038612a38565b60029c606089979695949397019d8e515110612d935750612c8260019d51610e65565b51908151612c8f81610e98565b8c5190612c9b82610e98565b612ca482610e98565b612cad81610e98565b03612d7c57612d2d611dda612b988f948f908f8f966129d69d8f989489612cf3611dda88612b3f60a09a8a015173ffffffffffffffffffffffffffffffffffffffff1690565b911603612d6d575b606084015110612d5e575b608083015110612d4e575b50015173ffffffffffffffffffffffffffffffffffffffff1690565b911603612d3f575b90919293386129c8565b612d48896116c5565b50612d35565b612d5790611663565b508f612d11565b612d6782611601565b50612d06565b612d768361159f565b50612cfb565b50505050505050505050915050612c12915061153d565b9c505050505050505050509050612c2d91506114db565b50811515806129c357508015156129c3565b6060810195612dd7612dd1610fbe8951610e4b565b86612834565b612e04612de8846128df8a51610e4b565b73ffffffffffffffffffffffffffffffffffffffff1686850152565b6080612e1f6060612e158a51610e4b565b5101519851610e4b565b5101516040612e3561294d866128df8651610e4b565b51015197612959565b9190612e48610d7c565b50612e51610d95565b612e59610d95565b612e6161034e565b918252602082015280936060810191825190848251111561303d575083612e8791610e76565b5160408201612e9c610fc4610fbe8351610e4b565b61302e57612ee2611dda612ec760a085015173ffffffffffffffffffffffffffffffffffffffff1690565b945173ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff8094161461301f578151612f0a81610e98565b612f17610fbe8351610e4b565b90612f2182610e98565b612f2a81610e98565b1492831593612fdd575b508215612fbf575b8215612fa1575b8215612f82575b5050612f7657612f6590612f5d856120d3565b50515161217f565b11612f6c57565b90610fab81611973565b505090610fab81611973565b6040919250612f92829151610e4b565b51015191015114153880612f4a565b91506080612faf8351610e4b565b5101516080820151141591612f43565b91506060612fcd8351610e4b565b5101516060820151141591612f3c565b909250613001602083015173ffffffffffffffffffffffffffffffffffffffff1690565b90613014611dda60206128df8751610e4b565b911614159138612f34565b505050505090610fab816119d5565b505050505090610fab81611973565b955050505050565b919082604091031261000e576020825161305e81610199565b92015190565b81601f8201121561000e5780519161307b83610368565b9261308960405194856102ec565b808452602092838086019260051b82010192831161000e578301905b8282106130b3575050505090565b815181529083019083016130a5565b91909160408184031261000e5780519267ffffffffffffffff9384811161000e5782019381601f8601121561000e5784516130fc81610368565b9061310a60405192836102ec565b808252602096878084019260051b8201019185831161000e5788809201905b83821061314957505050509483015190811161000e576107079201613064565b828091835161315781610199565b815201910190613129565b919390926000946000908195829573ffffffffffffffffffffffffffffffffffffffff90817f0000000000000000000000000000000000000000000000000000000000000000169182151560001461332c576040517f3e1040140000000000000000000000000000000000000000000000000000000080825273ffffffffffffffffffffffffffffffffffffffff841660048301526024820186905260448201969096528681606481875afa90818891899361330e575b506132c9575b50508a16613230575b505050505050565b84936132716040519788958694859485526004850160409194939273ffffffffffffffffffffffffffffffffffffffff606083019616825260208201520152565b03915afa909182826132a2575b505061328f575b8080808080613228565b61329a919250610e4b565b519038613285565b6132bf9293503d8091833e6132b781836102ec565b8101906130c2565b905090388061327e565b80511561321f576132ff919c50613305929b506132e590610e4b565b5173ffffffffffffffffffffffffffffffffffffffff1690565b9a610e4b565b5198388061321f565b90925061332591503d808a833e6132b781836102ec565b9138613219565b9590929391506040519360209686808988018861337e7f2a55205a0000000000000000000000000000000000000000000000000000000098898452876024840160209093929193604081019481520152565b03986133b07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09a8b81018352826102ec565b5190885afa6133bd6126e8565b9061344b575b508b166133d4575b50505050505050565b6040518781019384526024810191909152604481019190915260649384018152849361340090826102ec565b51915afa9061340d6126e8565b9161341d575b80808080806133cb565b81516040811461342e575b50613413565b61344093945081908301019101613045565b905090388080613428565b80516040811461345c575b506133c3565b919c50919a50613473919081018801908801613045565b99909a3880613456565b61070790604051907f01ffc9a70000000000000000000000000000000000000000000000000000000060208301527fd9b67a2600000000000000000000000000000000000000000000000000000000602483015260248252610b98826102d0565b61070790604051907f01ffc9a70000000000000000000000000000000000000000000000000000000060208301527f80ac58cd00000000000000000000000000000000000000000000000000000000602483015260248252610b98826102d0565b602081519101519060208110613553575090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060200360031b1b1690565b6000918291602082519201905afa6135966126e8565b901561362b57805190602082036136245760016135b28261353f565b166135bc8261353f565b0361362457603f7fff00000000000000000000000000000000000000000000000000000000000000917f010000000000000000000000000000000000000000000000000000000000000093601f1015613617575b0151161490565b61361f610e1b565b613610565b5050600090565b50600090565b9061363b82610368565b60409061364a825191826102ec565b8381527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06136788295610368565b0191600090815b84811061368d575050505050565b602090825161369b816102b4565b84815282858183015282870101520161367f565b81810392916000138015828513169184121617611b3957565b91909160008382019384129112908015821691151617611b3957565b6001907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611b7c570190565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff907f80000000000000000000000000000000000000000000000000000000000000008114611b7c570190565b9190808283821461387d5760208061379361378d613787613780878a6136af565b6002900590565b866136c8565b88610e76565b5101515b828513156137d15750508082126137c0575b50508181126137b757505050565b6101c29261375f565b6137ca918561375f565b38806137a9565b939691959490965b84886137e58389610e76565b51015110156137fc576137f7906136e4565b6137d9565b96955b8661380a8288610e76565b5101518510156138225761381d90613712565b6137ff565b91969390949582851315613837575b90613797565b91936138716138779161384a878a610e76565b51613855828b610e76565b51613860898c610e76565b5261386b828b610e76565b526136e4565b94613712565b91613831565b5050505050565b8181101561389b576000526020525b604060002090565b90600052602052613893565b6138af610d7c565b506138b8610d95565b916138c1610d95565b9260408051916138d0836102b4565b82526020948583015281600285511061398057506138ed8461398f565b156139725783515b6001908181111561396757600082821660011461395a579080921c915b86880191829160051b88015b80831061393c5750613932575b50506138f5565b519052388061392b565b919261394d84518b86015190613884565b815289019285019161391e565b5080821c82019190613912565b505050919092015191565b5092509050612c1282611a99565b945050509050612c1282611a37565b90600180926000908282905b6139a6575b50505050565b81518110156139ec57600581808601821b840191602083208093521b8301511015811515166139e2575b906139db8492611b4e565b909161399b565b91945084916139d0565b6139a0565b60009291600180821614613a4a578060011c935b602083810193849360051b01905b818410613a29575050613a24575050565b519052565b909293613a3b85518387015190613884565b81528101936040019290613a13565b600181811c81019450613a05565b613a60610d7c565b50613a69610d95565b613a71610d95565b93613a7a61034e565b91825260209485830152819360029283855110613b3e5750613a9e610ff08561398f565b613b2657946040519586820191600080958751965b60019586891115613b1557613af391908688018a14881b878916178015613b0457600214613afc578660051b8b015181525b850195871c960197896139f1565b96949394613ab3565b848152613ae5565b5086840160051b8b01518152613ae5565b975095975050505050508452604052565b509293505050613b3582611a99565b50612a81610d95565b95505092505050613b3582611a37565b90916040516020810191825260208152613b67816102b4565b5190209180516000915b818310613b7f575050501490565b909193613b99600191613b928785610e76565b5190613884565b94019190613b71565b613bab81610e98565b8015908115613bb8575090565b60019150613bc581610e98565b149056fea164736f6c6343000811000a";

type SeaportValidatorHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SeaportValidatorHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SeaportValidatorHelper__factory extends ContractFactory {
  constructor(...args: SeaportValidatorHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SeaportValidatorHelper> {
    return super.deploy(overrides || {}) as Promise<SeaportValidatorHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SeaportValidatorHelper {
    return super.attach(address) as SeaportValidatorHelper;
  }
  override connect(signer: Signer): SeaportValidatorHelper__factory {
    return super.connect(signer) as SeaportValidatorHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SeaportValidatorHelperInterface {
    return new utils.Interface(_abi) as SeaportValidatorHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SeaportValidatorHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SeaportValidatorHelper;
  }
}
